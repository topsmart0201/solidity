#------------------------------------------------------------------------------
# TravisCI configuration file for solidity.
#
# The documentation for solidity is hosted at:
#
# http://solidity.readthedocs.org
#
# ------------------------------------------------------------------------------
# This file is part of cpp-ethereum.
#
# cpp-ethereum is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# cpp-ethereum is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with cpp-ethereum.  If not, see <http://www.gnu.org/licenses/>
#
# (c) 2016 cpp-ethereum contributors.
#------------------------------------------------------------------------------

language: cpp
branches:
    # We need to whitelist the branches which we want to have "push" automation.
    # Pull requests will be built whatever the branches are for them.
    only:
        - develop
        - release
    
    # This blacklisting is an (unsuccessful) attempt to filter out some currently
    # unexplained 'untagged' builds which are endemic in bobsummerwill/cpp-ethereum
    # in my 'merge_repos' branch.   I suspect that these are rogue tags which
    # are being created by Appveyor as part of the Github Releases flow, but
    # I haven't pinned it down yet.
    #
    # See https://github.com/ethereum/webthree-umbrella/issues/697
    # See https://twitter.com/BobSummerwill/status/762802834857340929
    except:
        - /develop-v[0-9]/
matrix:
    include:
        - os: linux
          dist: trusty
          sudo: required
          compiler: gcc
          env:
              - TRAVIS_BUILD_TYPE=RelWithDebInfo
              - ZIP_SUFFIX=ubuntu-trusty
        - os: linux
          dist: trusty
          sudo: required
          compiler: gcc
          env:
              - JOB=docs
        - os: linux
          dist: trusty
          sudo: required
          compiler: gcc
          services:
              - docker
          before_install:
              - docker pull trzeci/emscripten:sdk-tag-1.35.4-64bit
          env:
              - JOB=emscripten
        - os: osx
          osx_image: beta-xcode6.2
          env:
              - TRAVIS_BUILD_TYPE=RelWithDebInfo
              - ZIP_SUFFIX=osx-mavericks
        - os: osx
          osx_image: xcode7.1
          env:
              - TRAVIS_BUILD_TYPE=RelWithDebInfo
              - ZIP_SUFFIX=osx-yosemite
        - os: osx
          osx_image: xcode7.3
          env:
              # The use of Debug config here ONLY for El Capitan is a workaround for "The Heisenbug"
              # See https://github.com/ethereum/webthree-umbrella/issues/565
              - TRAVIS_BUILD_TYPE=Debug
              - ZIP_SUFFIX=osx-elcapitan
        - os: osx
          osx_image: xcode8
          env:
              # Look like "The Heisenbug" is occurring here too, so we'll do the same workaround.
              # See https://travis-ci.org/ethereum/solidity/jobs/150240930
              - TRAVIS_BUILD_TYPE=Debug
              - ZIP_SUFFIX=macos-sierra
git:
    depth: 2

cache:
    ccache: true
    directories:
        - cryptopp
        - boost_1_57_0
        - build
        - jsoncpp

install:
    - test $JOB != default -a $JOB != docs || ./scripts/install_deps.sh
before_script:
    - test $JOB != emscripten || ./scripts/build_emscripten.sh
    - test $JOB != default || (mkdir -p build
      && cd build
      && cmake .. -DCMAKE_BUILD_TYPE=$TRAVIS_BUILD_TYPE
      && make -j2
      && cd ..
      && ./scripts/release.sh $ZIP_SUFFIX )
script:
    # There are a variety of reliability issues with the Solidity unit-tests at the time of
    # writing (especially on macOS), so within TravisCI we will try to run the unit-tests
    # up to 3 times before giving up and declaring the tests as broken.
    #
    # We should aim to remove this "retry logic" as soon as we can, because it is a
    # band-aid for issues which need solving at their root.  Some of those issues will be
    # in Solidity's RPC setup and some will be in 'eth'.  It seems unlikely that Solidity
    # itself is broken from the failure messages which we are seeing.
    #
    # More details on known issues at https://github.com/ethereum/solidity/issues/769    
    - test $JOB != default || (cd $TRAVIS_BUILD_DIR && (./scripts/tests.sh || ./scripts/tests.sh || ./scripts/tests.sh) )
    - test $JOB != docs || ./scripts/docs.sh
env:
    global:
        - ENCRYPTION_LABEL="6d4541b72666"
        - JOB=default

deploy:
    # This is the deploy target for the Emscripten build.
    # It publishes the JS file which was compiled as part of the earlier 'build_emscripten.sh'
    # step to https://github.com/ethereum/solc-bin/tree/gh-pages/bin.
    # Both the build and deploy steps for Emscripten are only run within the Ubuntu
    # configurations (not for macOS).  That is controlled by conditionals within the bash
    # scripts because TravisCI doesn't provide much in the way of conditional logic.
    - provider: script
      script: test $JOB != emscripten || scripts/release_emscripten.sh
      skip_cleanup: true
      on:
          branch: develop

    # This is the deploy target for the native build (Linux and macOS)
    # which generates ZIPs per commit.  We are in agreement that
    # generating ZIPs per commit for the develop branch is probably
    # just noise, so we only run this deployment target on 'release'.
    #
    # Unlike the Appveyor GitHub Releases target, the support in TravisCI
    # seemingly doesn't provide a means for passing a description, tag, etc.
    # In practice, we are letting the Appveyor CI do all that stuff, and
    # then this deployment flow just seems to find that most recent tag,
    # and just add our Linux and macOS ZIPs into the same tag, which is
    # what we want to happen.  But is very accidental and brittle-looking.
    #
    # The 'skip_cleanup' stops the workspace being cleaned out prior to
    # generation of the artifacts.  Strange that we should explicitly
    # need to do that, but we do.
    #
    # Tokens in TravisCI can be generated a few different ways.  Bob had
    # success using the 'travis' gem, and then using that gem to
    # create/edit this .travis.yml file, and then cut-and-pasting the
    # good bits back out of what it generated.  The gem changes all the
    # whitespace and deletes comments, so cannot be used as-is.  But
    # it does generate an appropriate auth token.
    #
    # TODO - I do not know if the api_key below which work correctly
    # for ethereum/solidity.   I suspect not, for the same reason as
    # my auth token does not work for Appveyor.  I don't have enough
    # permissions to enable this myself.  Christian should be able to.
    #
    # See https://docs.travis-ci.com/user/deployment/releases
    # See https://blog.travis-ci.com/2013-01-28-token-token-token/
    # See https://github.com/ethereum/webthree-umbrella/issues/658
    #
    - provider: releases
      api_key:
          secure: PWH37xVBCF0XiSjl+eH7XIdkrfxZXjzvqF4PiBOnD3VnFz+odrdnIwBmCeBYTHTWF8efpp8fmzWJk2UVq1JcpyZiC+SVxO8dx91W2ia1a+wKrEQuDgkUrZBkl5IQNCv0QS81DDQhliyZEaYh8wHO/7RReyMpGpw2U2u85WkFiZ+LdlHEZPfzUeh9lxQ9n8qwFL8Rja+Q05d4cQ8zaVEtofJJT4T6DUWhc3TzuxDYxOmjwg37rC9CkGSLn6VadSh8b3j5R0SZupFsAEvBL/imBLP9r9ewoo7o4p6By3jwiIgH9yNg7LM618xbffcNaYF/KtLBi9uPHfqF7hRD4PlECz+D0PR78nQItOX5HKm1QMg5kCnghRVCA0IVjpV5fiYQnMLM7dCRv34I5b3zLpa69wQ/GLYB2FViqNUfvPeiZTEeIJ2OmATlFx8AH2JoqpY1XJknWb35+vMfa8LSiJJW++SLWeV+ncC92hrvyZ1cy3trepRRZIfyYepxHifnfdWMkddQUJk5b2WS5Fy/TJLZNPeombnpvRhUC38dsYItarKeXTc6k4oADCEDZ2rgGIcEiqRxXV11Y5xHJekLDWzUs+YJNcCuL4pnAP//LOnbnH2w9rLpwhQYSl0anCd097NivAXQJXO2JI/byIYz1kiCVQWnW6EM8+72mLOklf/Qr8k=
      file: $TRAVIS_BUILD_DIR/solidity-$ZIP_SUFFIX.zip
      skip_cleanup: true
      on:
          repo: ethereum/solidity
          branch: release
          condition: $JOB != docs && $JOB != emscripten
